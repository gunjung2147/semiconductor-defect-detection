!pip install tensorflow matplotlib pandas scikit-learn
##############################################################
from google.colab import drive
drive.mount('/content/drive', force_remount=True)
##############################################################
import pickle
import pandas as pd
import sys

# This class handles the module path redirection
class UnpicklerWithPandasIndexes(pickle.Unpickler):
    def find_class(self, module, name):
        # Redirecting 'pandas.indexes' to 'pandas.core.indexes'
        if module == "pandas.indexes":
            module = "pandas.core.indexes"
        # Handling nested imports like 'pandas.indexes.base'
        elif module.startswith("pandas.indexes"):
            module = module.replace("pandas.indexes", "pandas.core.indexes")

        # Utilizing the modified module path for class lookup
        return super().find_class(module, name)

# 데이터 로드
# Specify the encoding when opening the pickle file. Try 'latin1' or 'utf-8'
with open('/content/drive/My Drive/wm-811k/LSWMD.pkl', 'rb') as file:
    data = UnpicklerWithPandasIndexes(file, encoding='latin1').load() # Try 'latin1' first
    # If 'latin1' fails, try 'utf-8' instead
    # data = UnpicklerWithPandasIndexes(file, encoding='utf-8').load() 

# 데이터 구조 확인
print(data.keys())
##############################################################
from sklearn.model_selection import train_test_split

# 예제 데이터 분리
wafer_maps = data['waferMap']  # 이미지 데이터
labels = data['failureType']   # 라벨 데이터

X_train, X_test, y_train, y_test = train_test_split(wafer_maps, labels, test_size=0.2, random_state=42)
print(f"훈련 데이터 크기: {len(X_train)}, 테스트 데이터 크기: {len(X_test)}")
##############################################################
import numpy as np

# 크기 조정 (예: 64x64)
def resize_images(images, size=(64, 64)):
    return np.array([np.resize(img, size) for img in images])

X_train_resized = resize_images(X_train)
X_test_resized = resize_images(X_test)
##############################################################
X_train_normalized = X_train_resized / 255.0
X_test_normalized = X_test_resized / 255.0
